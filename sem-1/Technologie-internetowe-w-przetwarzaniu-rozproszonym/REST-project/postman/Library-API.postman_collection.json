{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-a7b8-c9d0-f1a2b3c4d5e6",
		"name": "Projekt II: REST API Biblioteka",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Authors (CRUD)",
			"item": [
				{
					"name": "Create Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.collectionVariables.set(\"authorId\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Andrzej Sapkowski\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authors"
							]
						},
						"description": "Tworzy nowego autora i zapisuje jego ID jako zmienną kolekcji."
					},
					"response": []
				},
				{
					"name": "Get Author by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authors/{{authorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authors",
								"{{authorId}}"
							]
						},
						"description": "Pobiera autora używając ID zapisanego w poprzednim kroku."
					},
					"response": []
				},
				{
					"name": "Update Author",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Andrzej Sapkowski\",\n    \"birth_year\": 1948\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authors/{{authorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authors",
								"{{authorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authors/{{authorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authors",
								"{{authorId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Books (Pagination & Lost Update)",
			"item": [
				{
					"name": "Get Books (Paginated)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books?page=1&limit=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book to retrieve ETag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ETag exists\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});",
									"pm.collectionVariables.set(\"bookEtag\", pm.response.headers.get('ETag'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Book (Success with ETag)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "If-Match",
								"value": "{{bookEtag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"1\",\n    \"title\": \"Hobbit (Wersja zaktualizowana)\",\n    \"copies\": 8,\n    \"etag\": \"v1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/books/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Book (Fail - Stale ETag)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "If-Match",
								"value": "\"stary-lub-zly-etag\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"1\",\n    \"title\": \"Hobbit (Nieudana próba)\",\n    \"copies\": 1,\n    \"etag\": \"v1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/books/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Orders (Idempotency)",
			"item": [
				{
					"name": "Create Order (First time)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Idempotency-Key",
								"value": "klucz-testowy-12345",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": \"2\",\n    \"quantity\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order (Duplicate)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Idempotency-Key",
								"value": "klucz-testowy-12345",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": \"2\",\n    \"quantity\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "Wysyła to samo żądanie z tym samym kluczem idempotencji, aby sprawdzić, czy serwer zwróci zapisaną odpowiedź."
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Controller (Bulk Update)",
			"item": [
				{
					"name": "Bulk Update Books",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookIds\": [\"1\", \"2\"],\n    \"updates\": {\n        \"copies\": 50\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/bulk-update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bulk-update"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000/api/v1"
		}
	]
}